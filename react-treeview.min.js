var TreeView;(function(){TreeView=React.createClass({render:function(){var e=this;var l=this.props.source.map(function(l){return e._formatSource(l)});var t=this.props.className;return React.DOM.ul({className:"treeview"+(t?" "+t:"")},l)},_formatSource:function(l){var t=this;if(!l.displayNode.props.key){l.displayNode.props.key=Math.random()}return e({key:l.displayNode.props.key,displayNode:l.displayNode,initiallyCollapsed:l.initiallyCollapsed,canToggle:l.canToggle==null?true:l.canToggle,toggleOnDoubleClick:this.props.toggleOnDoubleClick},l.children&&l.children.length?l.children.map(function(e){return t._formatSource(e)}):null)}});var e=React.createClass({displayName:"TreeNode",getDefaultProps:function(){return{canToggle:true}},getInitialState:function(){return{collapsed:this.props.initiallyCollapsed}},render:function(){var e="treenode"+(this.props.canToggle?"":" treenode-no-toggle");return React.DOM.li({className:e},React.DOM.div({onClick:this.handleClick,onDoubleClick:this.handleDoubleClick},React.DOM.div({className:"treenode-arrow"},this.props.children&&this.props.children.length?this.state.collapsed?"▸":"▾":null),React.DOM.div({className:"treenode-item"},this.props.displayNode),React.DOM.div({className:"clearfix"})),React.DOM.ul({className:this.state.collapsed?"treenode-collapsed":""},this.props.children))},handleClick:function(){if(!this.props.toggleOnDoubleClick&&this.props.canToggle){this.setState({collapsed:!this.state.collapsed})}},handleDoubleClick:function(){if(this.props.toggleOnDoubleClick&&this.props.canToggle){this.setState({collapsed:!this.state.collapsed})}}})})();